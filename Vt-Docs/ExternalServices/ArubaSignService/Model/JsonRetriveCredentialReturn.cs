/* 
 * ArubaSignService
 *
 * <h1>ArubaSignService</h1>
 *
 * OpenAPI spec version: 2.3.2-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ArubaSignServiceRest.Client.SwaggerDateConverter;

namespace ArubaSignServiceRest.Model
{
    /// <summary>
    /// The return object for retrieve credential call.
    /// </summary>
    [DataContract]
    public partial class JsonRetriveCredentialReturn :  IEquatable<JsonRetriveCredentialReturn>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JsonRetriveCredentialReturn" /> class.
        /// </summary>
        /// <param name="status">The return status..</param>
        /// <param name="returnCode">The return code..</param>
        /// <param name="description">The return description..</param>
        /// <param name="blob">The return data in binary form..</param>
        /// <param name="textvalue">The return data in textual form..</param>
        public JsonRetriveCredentialReturn(string status = default(string), string returnCode = default(string), string description = default(string), string blob = default(string), string textvalue = default(string))
        {
            this.Status = status;
            this.ReturnCode = returnCode;
            this.Description = description;
            this.Blob = blob;
            this.Textvalue = textvalue;
        }
        
        /// <summary>
        /// The return status.
        /// </summary>
        /// <value>The return status.</value>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// The return code.
        /// </summary>
        /// <value>The return code.</value>
        [DataMember(Name="return_code", EmitDefaultValue=false)]
        public string ReturnCode { get; set; }

        /// <summary>
        /// The return description.
        /// </summary>
        /// <value>The return description.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// The return data in binary form.
        /// </summary>
        /// <value>The return data in binary form.</value>
        [DataMember(Name="blob", EmitDefaultValue=false)]
        public string Blob { get; set; }

        /// <summary>
        /// The return data in textual form.
        /// </summary>
        /// <value>The return data in textual form.</value>
        [DataMember(Name="textvalue", EmitDefaultValue=false)]
        public string Textvalue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class JsonRetriveCredentialReturn {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ReturnCode: ").Append(ReturnCode).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Blob: ").Append(Blob).Append("\n");
            sb.Append("  Textvalue: ").Append(Textvalue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JsonRetriveCredentialReturn);
        }

        /// <summary>
        /// Returns true if JsonRetriveCredentialReturn instances are equal
        /// </summary>
        /// <param name="input">Instance of JsonRetriveCredentialReturn to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JsonRetriveCredentialReturn input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.ReturnCode == input.ReturnCode ||
                    (this.ReturnCode != null &&
                    this.ReturnCode.Equals(input.ReturnCode))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Blob == input.Blob ||
                    (this.Blob != null &&
                    this.Blob.Equals(input.Blob))
                ) && 
                (
                    this.Textvalue == input.Textvalue ||
                    (this.Textvalue != null &&
                    this.Textvalue.Equals(input.Textvalue))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.ReturnCode != null)
                    hashCode = hashCode * 59 + this.ReturnCode.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Blob != null)
                    hashCode = hashCode * 59 + this.Blob.GetHashCode();
                if (this.Textvalue != null)
                    hashCode = hashCode * 59 + this.Textvalue.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
