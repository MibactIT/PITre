/* 
 * ArubaSignService
 *
 * <h1>ArubaSignService</h1>
 *
 * OpenAPI spec version: 2.3.2-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ArubaSignServiceRest.Client.SwaggerDateConverter;

namespace ArubaSignServiceRest.Model
{
    /// <summary>
    /// Authentication for application.
    /// </summary>
    [DataContract]
    public partial class JsonApplicationAuth :  IEquatable<JsonApplicationAuth>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JsonApplicationAuth" /> class.
        /// </summary>
        /// <param name="applicationuser">The user who tries to use the application..</param>
        /// <param name="applicationpassword">The password for the application..</param>
        public JsonApplicationAuth(string applicationuser = default(string), string applicationpassword = default(string))
        {
            this.Applicationuser = applicationuser;
            this.Applicationpassword = applicationpassword;
        }
        
        /// <summary>
        /// The user who tries to use the application.
        /// </summary>
        /// <value>The user who tries to use the application.</value>
        [DataMember(Name="applicationuser", EmitDefaultValue=false)]
        public string Applicationuser { get; set; }

        /// <summary>
        /// The password for the application.
        /// </summary>
        /// <value>The password for the application.</value>
        [DataMember(Name="applicationpassword", EmitDefaultValue=false)]
        public string Applicationpassword { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class JsonApplicationAuth {\n");
            sb.Append("  Applicationuser: ").Append(Applicationuser).Append("\n");
            sb.Append("  Applicationpassword: ").Append(Applicationpassword).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JsonApplicationAuth);
        }

        /// <summary>
        /// Returns true if JsonApplicationAuth instances are equal
        /// </summary>
        /// <param name="input">Instance of JsonApplicationAuth to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JsonApplicationAuth input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Applicationuser == input.Applicationuser ||
                    (this.Applicationuser != null &&
                    this.Applicationuser.Equals(input.Applicationuser))
                ) && 
                (
                    this.Applicationpassword == input.Applicationpassword ||
                    (this.Applicationpassword != null &&
                    this.Applicationpassword.Equals(input.Applicationpassword))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Applicationuser != null)
                    hashCode = hashCode * 59 + this.Applicationuser.GetHashCode();
                if (this.Applicationpassword != null)
                    hashCode = hashCode * 59 + this.Applicationpassword.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
