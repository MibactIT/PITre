//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace externalService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClrVerificationSoap", Namespace="http://nttdata.com/2013/CRLSvc")]
    public partial class ClrVerification : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BatchDettaglioCertificatoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileLocaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvaServizioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvaServizioCERTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DettaglioCertificatoOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaCertificatoConFileOriginaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaCertificatoFileLocaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaCertificatoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnessioneServizioOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClrVerification() {
            this.Url = global::Properties.Settings.Default.DocsPaDigitalSignature_externalService_ClrVerification;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BatchDettaglioCertificatoCompletedEventHandler BatchDettaglioCertificatoCompleted;
        
        /// <remarks/>
        public event FileLocaleCompletedEventHandler FileLocaleCompleted;
        
        /// <remarks/>
        public event ProvaServizioCompletedEventHandler ProvaServizioCompleted;
        
        /// <remarks/>
        public event ProvaServizioCERTCompletedEventHandler ProvaServizioCERTCompleted;
        
        /// <remarks/>
        public event DettaglioCertificatoCompletedEventHandler DettaglioCertificatoCompleted;
        
        /// <remarks/>
        public event VerificaCertificatoConFileOriginaleCompletedEventHandler VerificaCertificatoConFileOriginaleCompleted;
        
        /// <remarks/>
        public event VerificaCertificatoFileLocaleCompletedEventHandler VerificaCertificatoFileLocaleCompleted;
        
        /// <remarks/>
        public event VerificaCertificatoCompletedEventHandler VerificaCertificatoCompleted;
        
        /// <remarks/>
        public event ConnessioneServizioCompletedEventHandler ConnessioneServizioCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/BatchDettaglioCertificato", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] BatchDettaglioCertificato(string[] CertificateBase64) {
            object[] results = this.Invoke("BatchDettaglioCertificato", new object[] {
                        CertificateBase64});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void BatchDettaglioCertificatoAsync(string[] CertificateBase64) {
            this.BatchDettaglioCertificatoAsync(CertificateBase64, null);
        }
        
        /// <remarks/>
        public void BatchDettaglioCertificatoAsync(string[] CertificateBase64, object userState) {
            if ((this.BatchDettaglioCertificatoOperationCompleted == null)) {
                this.BatchDettaglioCertificatoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchDettaglioCertificatoOperationCompleted);
            }
            this.InvokeAsync("BatchDettaglioCertificato", new object[] {
                        CertificateBase64}, this.BatchDettaglioCertificatoOperationCompleted, userState);
        }
        
        private void OnBatchDettaglioCertificatoOperationCompleted(object arg) {
            if ((this.BatchDettaglioCertificatoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchDettaglioCertificatoCompleted(this, new BatchDettaglioCertificatoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/FileLocale", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileLocale(string file) {
            object[] results = this.Invoke("FileLocale", new object[] {
                        file});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileLocaleAsync(string file) {
            this.FileLocaleAsync(file, null);
        }
        
        /// <remarks/>
        public void FileLocaleAsync(string file, object userState) {
            if ((this.FileLocaleOperationCompleted == null)) {
                this.FileLocaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileLocaleOperationCompleted);
            }
            this.InvokeAsync("FileLocale", new object[] {
                        file}, this.FileLocaleOperationCompleted, userState);
        }
        
        private void OnFileLocaleOperationCompleted(object arg) {
            if ((this.FileLocaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileLocaleCompleted(this, new FileLocaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/ProvaServizio", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProvaServizio() {
            object[] results = this.Invoke("ProvaServizio", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProvaServizioAsync() {
            this.ProvaServizioAsync(null);
        }
        
        /// <remarks/>
        public void ProvaServizioAsync(object userState) {
            if ((this.ProvaServizioOperationCompleted == null)) {
                this.ProvaServizioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvaServizioOperationCompleted);
            }
            this.InvokeAsync("ProvaServizio", new object[0], this.ProvaServizioOperationCompleted, userState);
        }
        
        private void OnProvaServizioOperationCompleted(object arg) {
            if ((this.ProvaServizioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvaServizioCompleted(this, new ProvaServizioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/ProvaServizioCERT", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProvaServizioCERT() {
            object[] results = this.Invoke("ProvaServizioCERT", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProvaServizioCERTAsync() {
            this.ProvaServizioCERTAsync(null);
        }
        
        /// <remarks/>
        public void ProvaServizioCERTAsync(object userState) {
            if ((this.ProvaServizioCERTOperationCompleted == null)) {
                this.ProvaServizioCERTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvaServizioCERTOperationCompleted);
            }
            this.InvokeAsync("ProvaServizioCERT", new object[0], this.ProvaServizioCERTOperationCompleted, userState);
        }
        
        private void OnProvaServizioCERTOperationCompleted(object arg) {
            if ((this.ProvaServizioCERTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvaServizioCERTCompleted(this, new ProvaServizioCERTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/DettaglioCertificato", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DettaglioCertificato([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] CertificateDer, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] CertificateCAPEM) {
            object[] results = this.Invoke("DettaglioCertificato", new object[] {
                        CertificateDer,
                        CertificateCAPEM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DettaglioCertificatoAsync(byte[] CertificateDer, byte[] CertificateCAPEM) {
            this.DettaglioCertificatoAsync(CertificateDer, CertificateCAPEM, null);
        }
        
        /// <remarks/>
        public void DettaglioCertificatoAsync(byte[] CertificateDer, byte[] CertificateCAPEM, object userState) {
            if ((this.DettaglioCertificatoOperationCompleted == null)) {
                this.DettaglioCertificatoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDettaglioCertificatoOperationCompleted);
            }
            this.InvokeAsync("DettaglioCertificato", new object[] {
                        CertificateDer,
                        CertificateCAPEM}, this.DettaglioCertificatoOperationCompleted, userState);
        }
        
        private void OnDettaglioCertificatoOperationCompleted(object arg) {
            if ((this.DettaglioCertificatoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DettaglioCertificatoCompleted(this, new DettaglioCertificatoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/VerificaCertificatoConFileOriginale", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerificaCertificatoConFileOriginale([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileOriginale, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dataverificaDT, bool ancheFile) {
            object[] results = this.Invoke("VerificaCertificatoConFileOriginale", new object[] {
                        content,
                        fileOriginale,
                        dataverificaDT,
                        ancheFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaCertificatoConFileOriginaleAsync(byte[] content, byte[] fileOriginale, System.Nullable<System.DateTime> dataverificaDT, bool ancheFile) {
            this.VerificaCertificatoConFileOriginaleAsync(content, fileOriginale, dataverificaDT, ancheFile, null);
        }
        
        /// <remarks/>
        public void VerificaCertificatoConFileOriginaleAsync(byte[] content, byte[] fileOriginale, System.Nullable<System.DateTime> dataverificaDT, bool ancheFile, object userState) {
            if ((this.VerificaCertificatoConFileOriginaleOperationCompleted == null)) {
                this.VerificaCertificatoConFileOriginaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaCertificatoConFileOriginaleOperationCompleted);
            }
            this.InvokeAsync("VerificaCertificatoConFileOriginale", new object[] {
                        content,
                        fileOriginale,
                        dataverificaDT,
                        ancheFile}, this.VerificaCertificatoConFileOriginaleOperationCompleted, userState);
        }
        
        private void OnVerificaCertificatoConFileOriginaleOperationCompleted(object arg) {
            if ((this.VerificaCertificatoConFileOriginaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaCertificatoConFileOriginaleCompleted(this, new VerificaCertificatoConFileOriginaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/VerificaCertificatoFileLocale", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerificaCertificatoFileLocale(string file, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dataverificaDT, bool ancheFile) {
            object[] results = this.Invoke("VerificaCertificatoFileLocale", new object[] {
                        file,
                        dataverificaDT,
                        ancheFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaCertificatoFileLocaleAsync(string file, System.Nullable<System.DateTime> dataverificaDT, bool ancheFile) {
            this.VerificaCertificatoFileLocaleAsync(file, dataverificaDT, ancheFile, null);
        }
        
        /// <remarks/>
        public void VerificaCertificatoFileLocaleAsync(string file, System.Nullable<System.DateTime> dataverificaDT, bool ancheFile, object userState) {
            if ((this.VerificaCertificatoFileLocaleOperationCompleted == null)) {
                this.VerificaCertificatoFileLocaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaCertificatoFileLocaleOperationCompleted);
            }
            this.InvokeAsync("VerificaCertificatoFileLocale", new object[] {
                        file,
                        dataverificaDT,
                        ancheFile}, this.VerificaCertificatoFileLocaleOperationCompleted, userState);
        }
        
        private void OnVerificaCertificatoFileLocaleOperationCompleted(object arg) {
            if ((this.VerificaCertificatoFileLocaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaCertificatoFileLocaleCompleted(this, new VerificaCertificatoFileLocaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/VerificaCertificato", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerificaCertificato([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> dataverificaDT, bool ancheFile) {
            object[] results = this.Invoke("VerificaCertificato", new object[] {
                        content,
                        dataverificaDT,
                        ancheFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaCertificatoAsync(byte[] content, System.Nullable<System.DateTime> dataverificaDT, bool ancheFile) {
            this.VerificaCertificatoAsync(content, dataverificaDT, ancheFile, null);
        }
        
        /// <remarks/>
        public void VerificaCertificatoAsync(byte[] content, System.Nullable<System.DateTime> dataverificaDT, bool ancheFile, object userState) {
            if ((this.VerificaCertificatoOperationCompleted == null)) {
                this.VerificaCertificatoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaCertificatoOperationCompleted);
            }
            this.InvokeAsync("VerificaCertificato", new object[] {
                        content,
                        dataverificaDT,
                        ancheFile}, this.VerificaCertificatoOperationCompleted, userState);
        }
        
        private void OnVerificaCertificatoOperationCompleted(object arg) {
            if ((this.VerificaCertificatoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaCertificatoCompleted(this, new VerificaCertificatoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nttdata.com/2013/CRLSvc/ConnessioneServizio", RequestNamespace="http://nttdata.com/2013/CRLSvc", ResponseNamespace="http://nttdata.com/2013/CRLSvc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConnessioneServizio() {
            object[] results = this.Invoke("ConnessioneServizio", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConnessioneServizioAsync() {
            this.ConnessioneServizioAsync(null);
        }
        
        /// <remarks/>
        public void ConnessioneServizioAsync(object userState) {
            if ((this.ConnessioneServizioOperationCompleted == null)) {
                this.ConnessioneServizioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnessioneServizioOperationCompleted);
            }
            this.InvokeAsync("ConnessioneServizio", new object[0], this.ConnessioneServizioOperationCompleted, userState);
        }
        
        private void OnConnessioneServizioOperationCompleted(object arg) {
            if ((this.ConnessioneServizioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnessioneServizioCompleted(this, new ConnessioneServizioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void BatchDettaglioCertificatoCompletedEventHandler(object sender, BatchDettaglioCertificatoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchDettaglioCertificatoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchDettaglioCertificatoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FileLocaleCompletedEventHandler(object sender, FileLocaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileLocaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileLocaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProvaServizioCompletedEventHandler(object sender, ProvaServizioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvaServizioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvaServizioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProvaServizioCERTCompletedEventHandler(object sender, ProvaServizioCERTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvaServizioCERTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvaServizioCERTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DettaglioCertificatoCompletedEventHandler(object sender, DettaglioCertificatoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DettaglioCertificatoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DettaglioCertificatoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VerificaCertificatoConFileOriginaleCompletedEventHandler(object sender, VerificaCertificatoConFileOriginaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaCertificatoConFileOriginaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaCertificatoConFileOriginaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VerificaCertificatoFileLocaleCompletedEventHandler(object sender, VerificaCertificatoFileLocaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaCertificatoFileLocaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaCertificatoFileLocaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VerificaCertificatoCompletedEventHandler(object sender, VerificaCertificatoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaCertificatoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaCertificatoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConnessioneServizioCompletedEventHandler(object sender, ConnessioneServizioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnessioneServizioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnessioneServizioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591